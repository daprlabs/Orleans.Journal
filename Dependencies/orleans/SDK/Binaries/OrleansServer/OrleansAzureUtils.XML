<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OrleansAzureUtils</name>
    </assembly>
    <members>
        <member name="T:Orleans.Host.Azure.Utils.AzureConfigUtils">
            <summary>
            Various utility functions to make it easier to access and handle Azure configuration information.
            </summary>
        </member>
        <member name="M:Orleans.Host.Azure.Utils.AzureConfigUtils.GetInstanceName(System.String,Microsoft.WindowsAzure.ServiceRuntime.RoleInstance)">
            <summary>
            Get the instance named for the specified Azure role instance
            </summary>
            <param name="deploymentId">Azure Deployment Id for this service</param>
            <param name="roleInstance">Azure role instance information</param>
            <returns>Instance name for this role</returns>
        </member>
        <member name="M:Orleans.Host.Azure.Utils.AzureConfigUtils.GetMyInstanceIndex">
            <summary>
            Get the index number for the current Azure role instance. 
            </summary>
            <returns>Index number for the current role instance [zero-based]</returns>
        </member>
        <member name="M:Orleans.Host.Azure.Utils.AzureConfigUtils.GetMyInstanceName">
            <summary>
            Get the instance name for the current Azure role instance
            </summary>
            <returns>Instance name for the current role instance</returns>
        </member>
        <member name="M:Orleans.Host.Azure.Utils.AzureConfigUtils.ListAllRoleDetails(System.Collections.Generic.IDictionary{System.String,Microsoft.WindowsAzure.ServiceRuntime.Role})">
            <summary>
            List instance details of the specified roles
            </summary>
            <param name="roles">Dictionary contining the roles to be listed, indexed by instance name</param>
        </member>
        <member name="M:Orleans.Host.Azure.Utils.AzureConfigUtils.ListRoleInstanceDetails(Microsoft.WindowsAzure.ServiceRuntime.RoleInstance)">
            <summary>
            List details of the specified role instance
            </summary>
            <param name="instance">role instance to be listed</param>
        </member>
        <member name="M:Orleans.Host.Azure.Utils.AzureConfigUtils.ListRoleInstanceEndpoints(Microsoft.WindowsAzure.ServiceRuntime.RoleInstance)">
            <summary>
            List endpoint details of the specified role instance
            </summary>
            <param name="instance">role instance to be listed</param>
        </member>
        <member name="M:Orleans.Host.Azure.Utils.AzureConfigUtils.GetRoleEndpoints(Microsoft.WindowsAzure.ServiceRuntime.Role)">
            <summary>
            Get the endpoint details of the specified role
            </summary>
            <param name="role">role to be inspected</param>
            <returns>The list of <c>RoleInstanceEndpoint</c> data associated with the specified Azure role.</returns>
        </member>
        <member name="M:Orleans.Host.Azure.Utils.AzureConfigUtils.GetRoleInstanceEndpoints(System.String,System.String)">
            <summary>
            Get the endpoint IP address details of the specified role
            </summary>
            <param name="roleName">Name of the role to be inspected</param>
            <param name="endpointName">Name of the endpoint to be inspected</param>
            <returns>The list of <c>IPEndPoint</c> data for the specified endpoint associated with the specified Azure role name.</returns>
        </member>
        <member name="P:Orleans.Host.Azure.Utils.AzureConfigUtils.AzureAppDirectory">
            <summary>
            Try to determine the base location for the Azure app directory we are being run from
            </summary>
            <returns>App directory this library is being run from</returns>
            <exception cref="T:System.InvalidOperationException">If unable to determine our app directory location</exception>
        </member>
        <member name="P:Orleans.Host.Azure.Utils.AzureConfigUtils.ClientConfigFileLocation">
            <summary>
             Return the default file location for the Orleans client config file (ClientConfiguration.xml)
            </summary>
            <exception cref="T:System.IO.FileNotFoundException">If client config file cannot be located</exception>
        </member>
        <member name="P:Orleans.Host.Azure.Utils.AzureConfigUtils.SiloConfigFileLocation">
            <summary>
             Return the default file location for the Orleans silo config file (OrleansConfiguration.xml)
            </summary>
            <exception cref="T:System.IO.FileNotFoundException">If silo config file cannot be located</exception>
        </member>
        <member name="T:Orleans.Host.Azure.Client.OrleansAzureClient">
            <summary>
            Utility class for initializing an Orleans client running inside Azure.
            </summary>
        </member>
        <member name="M:Orleans.Host.Azure.Client.OrleansAzureClient.Initialize">
            <summary>
            Initialise the Orleans client runtime in this Azure process
            </summary>
        </member>
        <member name="M:Orleans.Host.Azure.Client.OrleansAzureClient.Initialize(System.IO.FileInfo)">
            <summary>
            Initialise the Orleans client runtime in this Azure process
            </summary>
            <param name="orleansClientConfigFile">Location of the Orleans client config file to use for base config settings</param>
            <remarks>Any silo gateway address specified in the config file is ignored, and gateway endpoint info is read from the silo instance table in Azure storage instead.</remarks>
        </member>
        <member name="M:Orleans.Host.Azure.Client.OrleansAzureClient.Initialize(System.String)">
            <summary>
            Initialise the Orleans client runtime in this Azure process
            </summary>
            <param name="clientConfigFilePath">Location of the Orleans client config file to use for base config settings</param>
            <remarks>Any silo gateway address specified in the config file is ignored, and gateway endpoint info is read from the silo instance table in Azure storage instead.</remarks>
        </member>
        <member name="M:Orleans.Host.Azure.Client.OrleansAzureClient.Initialize(Orleans.ClientConfiguration)">
            <summary>
            Initializes the Orleans client runtime in this Azure process from the provided client configuration object. 
            If the configuration object is null, the initialization fails. 
            </summary>
            <param name="config">A ClientConfiguration object.</param>
        </member>
        <member name="M:Orleans.Host.Azure.Client.OrleansAzureClient.Initialize(Orleans.ClientConfiguration,System.Int32)">
            <summary>
            Initializes the Orleans client runtime in this Azure process from the provided client configuration object. 
            If the configuration object is null, the initialization fails. 
            </summary>
            <param name="config">A ClientConfiguration object.</param>
            <param name="instanceIndex">Index offset for this client instance. Value must be >= zero.</param>
        </member>
        <member name="M:Orleans.Host.Azure.Client.OrleansAzureClient.Uninitialize">
            <summary>
            Uninitializes the Orleans client runtime in this Azure process. 
            </summary>
        </member>
        <member name="P:Orleans.Host.Azure.Client.OrleansAzureClient.MaxRetries">
            <summary>Number of retry attempts to make when searching for gateway silos to connect to.</summary>
        </member>
        <member name="P:Orleans.Host.Azure.Client.OrleansAzureClient.StartupRetryPause">
            <summary>Amount of time to pause before each retry attempt.</summary>
        </member>
        <member name="P:Orleans.Host.Azure.Client.OrleansAzureClient.IsInitialized">
            <summary>
            Whether the Orleans Azure client runtime has already been initialized
            </summary>
            <returns><c>true</c> if client runtime is already initialized</returns>
        </member>
        <member name="T:Orleans.Host.Azure.OrleansAzureSilo">
            <summary>
            Wrapper class for an Orleans silo running in the current host process.
            </summary>
        </member>
        <member name="M:Orleans.Host.Azure.OrleansAzureSilo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Orleans.Host.Azure.OrleansAzureSilo.Start(System.String,Microsoft.WindowsAzure.ServiceRuntime.RoleInstance)">
            <summary>
            Initialize this Orleans silo for execution with the specified Azure deploymentId and role instance
            </summary>
            <param name="deploymentId">Azure DeploymentId this silo is running under</param>
            <param name="myRoleInstance">Azure role instance info this silo is running under</param>
            <returns><c>true</c> is the silo startup was successfull</returns>
        </member>
        <member name="M:Orleans.Host.Azure.OrleansAzureSilo.Start(System.String,Microsoft.WindowsAzure.ServiceRuntime.RoleInstance,Orleans.OrleansConfiguration)">
            <summary>
            Initialize this Orleans silo for execution with the specified Azure deploymentId and role instance
            </summary>
            <param name="deploymentId">Azure DeploymentId this silo is running under</param>
            <param name="myRoleInstance">Azure role instance info this silo is running under</param>
            <param name="config">If null, Config data will be read from silo config file as normal, otherwise use the specified config data.</param>
            <returns><c>true</c> is the silo startup was successfull</returns>
        </member>
        <member name="M:Orleans.Host.Azure.OrleansAzureSilo.Run">
            <summary>
            Makes this Orleans silo begin executing and become active.
            Note: This method call will only return control back to the caller when the silo is shutdown.
            </summary>
        </member>
        <member name="M:Orleans.Host.Azure.OrleansAzureSilo.Stop">
            <summary>
            Stop this Orleans silo executing.
            </summary>
        </member>
        <member name="P:Orleans.Host.Azure.OrleansAzureSilo.StartupRetryPause">
            <summary>
            Amount of time to pause before retrying if a secondary silo is unable to connect to the primary silo for this deployment.
            Defaults to 5 seconds.
            </summary>
        </member>
        <member name="P:Orleans.Host.Azure.OrleansAzureSilo.MaxRetries">
            <summary>
            Number of times to retrying if a secondary silo is unable to connect to the primary silo for this deployment.
            Defaults to 120 times.
            </summary>
        </member>
        <member name="P:Orleans.Host.Azure.OrleansAzureSilo.DataConnectionConfigurationSettingName">
            <summary>
            The name of the configuration key value for locating the DataConnectionString setting from the Azure configuration for this role.
            Defaults to <c>DataConnectionString</c>
            </summary>
        </member>
        <member name="P:Orleans.Host.Azure.OrleansAzureSilo.SiloEndpointConfigurationKeyName">
            <summary>
            The name of the configuration key value for locating the OrleansSiloEndpoint setting from the Azure configuration for this role.
            Defaults to <c>OrleansSiloEndpoint</c>
            </summary>
        </member>
        <member name="P:Orleans.Host.Azure.OrleansAzureSilo.ProxyEndpointConfigurationKeyName">
            <summary>
            The name of the configuration key value for locating the OrleansProxyEndpoint setting from the Azure configuration for this role.
            Defaults to <c>OrleansProxyEndpoint</c>
            </summary>
        </member>
        <member name="P:Orleans.Host.Azure.OrleansAzureSilo.SiloLocalStoreConfigurationKeyName">
            <summary>
            The name of the configuration key value for locating the LocalStoreDirectory setting from the Azure configuration for this role.
            Defaults to <c>LocalStoreDirectory</c>
            </summary>
        </member>
    </members>
</doc>
