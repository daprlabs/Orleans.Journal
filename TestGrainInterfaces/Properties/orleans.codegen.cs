//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998

namespace TestGrainInterfaces
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using Orleans;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class StackGrainFactory
    {
        

                        public static IStackGrain GetGrain(long primaryKey)
                        {
                            return Cast(GrainFactoryBase.MakeGrainReferenceInternal(typeof(IStackGrain), 1724875955, primaryKey));
                        }

                        public static IStackGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(GrainFactoryBase.MakeGrainReferenceInternal(typeof(IStackGrain), 1724875955, primaryKey, grainClassNamePrefix));
                        }

                        public static IStackGrain GetGrain(Guid primaryKey)
                        {
                            return Cast(GrainFactoryBase.MakeGrainReferenceInternal(typeof(IStackGrain), 1724875955, primaryKey));
                        }

                        public static IStackGrain GetGrain(Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(GrainFactoryBase.MakeGrainReferenceInternal(typeof(IStackGrain), 1724875955, primaryKey, grainClassNamePrefix));
                        }

            public static IStackGrain Cast(IAddressable grainRef)
            {
                
                return StackGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [Orleans.GrainReferenceAttribute("TestGrainInterfaces.IStackGrain")]
        internal class StackGrainReference : Orleans.GrainReference, IStackGrain, Orleans.IAddressable
        {
            

            public static IStackGrain Cast(IAddressable grainRef)
            {
                
                return (IStackGrain) GrainReference.CastInternal(typeof(IStackGrain), (GrainReference gr) => { return new StackGrainReference(gr);}, grainRef, 1724875955);
            }

                protected override int InterfaceId { get { return 1724875955; } }

                public override bool IsCompatible(int interfaceId) { return interfaceId == this.InterfaceId; }

                protected override string InterfaceName { get { return "TestGrainInterfaces.IStackGrain"; } }

                protected override string GetMethodName(int interfaceId, int methodId) { return StackGrainMethodInvoker.GetMethodName(interfaceId, methodId); }
            
            protected internal StackGrainReference(GrainReference reference) : 
                    base(reference)
            {
            }
            
            [Orleans.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                StackGrainReference input = ((StackGrainReference)(original));
                return ((StackGrainReference)(GrainReference.CopyGrainReference(input)));
            }
            
            [Orleans.SerializerMethodAttribute()]
            public static void _Serializer(object original, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                StackGrainReference input = ((StackGrainReference)(original));
                GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [Orleans.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return StackGrainReference.Cast(((Orleans.GrainReference)(GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public System.Threading.Tasks.Task<int> GetSize()
            {

                return base.InvokeMethodAsync<System.Int32>(-1047152833, new object[] {}, TimeSpan.Zero );
            }
            
            public System.Threading.Tasks.Task Push(int value)
            {

                return base.InvokeMethodAsync<object>(424989655, new object[] {value}, TimeSpan.Zero );
            }
            
            public System.Threading.Tasks.Task<int> Pop()
            {

                return base.InvokeMethodAsync<System.Int32>(1780612597, new object[] {}, TimeSpan.Zero );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [Orleans.MethodInvokerAttribute("TestGrainInterfaces.IStackGrain", 1724875955)]
    internal class StackGrainMethodInvoker : IGrainMethodInvoker
    {
        
        public int InterfaceId
        {
            get
            {
                return 1724875955;
            }
        }
        
        public async System.Threading.Tasks.Task<Object> Invoke(IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {
                if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1724875955:  // IStackGrain
                        switch (methodId)
                        {
                            case -1047152833: 
                                return await ((IStackGrain)grain).GetSize();
                            case 424989655: 
                                await ((IStackGrain)grain).Push((Int32)arguments[0]);
                              return true;
                            case 1780612597: 
                                return await ((IStackGrain)grain).Pop();
                            default: 
                                throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1724875955:  // IStackGrain
                    switch (methodId)
                    {
                        case -1047152833:
                            return "GetSize";
                    case 424989655:
                            return "Push";
                    case 1780612597:
                            return "Pop";
                    case -606142484:
                            return "GetProperties";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [Serializable()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class StackGrainProperties
    {
        

            public Dictionary<string,object> AsDictionary()
            {  
                var retValue = new Dictionary<string,object>();
                return retValue;
            }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
